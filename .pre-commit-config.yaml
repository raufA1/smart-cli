repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503,E501
          - --per-file-ignores=__init__.py:F401
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --show-error-codes]
        additional_dependencies:
          - types-requests
          - types-pyyaml
          - types-setuptools

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/, -f, json]
        exclude: ^tests/

  # Dependency scanning (optional - can fail in CI)
  # - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
  #   rev: v1.3.2
  #   hooks:
  #     - id: python-safety-dependencies-check
  #       files: requirements\.txt$

  # YAML linting (optional - can fail in CI)
  # - repo: https://github.com/adrienverge/yamllint.git
  #   rev: v1.33.0
  #   hooks:
  #     - id: yamllint
  #       args: [-c=.yamllint.yaml]

  # Markdown linting (optional - can fail in CI)
  # - repo: https://github.com/igorshubovych/markdownlint-cli
  #   rev: v0.38.0
  #   hooks:
  #     - id: markdownlint
  #       args: [--config=.markdownlint.yaml]

  # Dockerfile linting (optional - can fail in CI)
  # - repo: https://github.com/hadolint/hadolint
  #   rev: v2.12.0
  #   hooks:
  #     - id: hadolint-docker
  #       args: [--ignore, DL3008, --ignore, DL3009]

  # Secrets scanning (optional - can fail in CI)
  # - repo: https://github.com/Yelp/detect-secrets
  #   rev: v1.4.0
  #   hooks:
  #     - id: detect-secrets
  #       args: ['--baseline', '.secrets.baseline']
  #       exclude: package.lock.json

  # Conventional commits (optional - can fail in CI)
  # - repo: https://github.com/compilerla/conventional-pre-commit
  #   rev: v3.0.0
  #   hooks:
  #     - id: conventional-pre-commit
  #       stages: [commit-msg]
  #       args: [optional-scope, optional-body]

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false