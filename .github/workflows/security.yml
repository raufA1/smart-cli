name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Mondays at 2 AM UTC
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"

jobs:
  dependency-security:
    runs-on: ubuntu-latest
    name: Dependency Security Scan
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit pip-audit
        pip install -e . || pip install -r requirements.txt
    
    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json || true
        safety check --short-report
    
    - name: Run pip-audit
      run: |
        pip-audit --desc --output-format json --output pip-audit-report.json || true
        pip-audit --desc || echo "pip-audit completed with warnings"
    
    - name: Upload dependency scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-security-reports
        path: |
          safety-report.json
          pip-audit-report.json
        retention-days: 30

  code-security:
    runs-on: ubuntu-latest
    name: Code Security Scan
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install Bandit
      run: pip install bandit[toml]
    
    - name: Run Bandit security linter
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -f txt
    
    - name: Upload Bandit results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json
        retention-days: 30

  secrets-detection:
    runs-on: ubuntu-latest
    name: Secrets Detection
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run basic secret detection
      run: |
        echo "🔍 Checking for obvious secrets..."
        if grep -r -i "password.*=" src/ --include="*.py" | head -3; then
          echo "⚠️ Potential password assignments found"
        fi
        if grep -r -i "secret.*=" src/ --include="*.py" | head -3; then
          echo "⚠️ Potential secret assignments found" 
        fi
        if grep -r -i "api_key.*=" src/ --include="*.py" | head -3; then
          echo "⚠️ Potential API key assignments found"
        fi
        echo "✅ Basic secret detection completed"

  license-check:
    runs-on: ubuntu-latest
    name: License Compliance Check
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-licenses
        pip install -e . || pip install -r requirements.txt
    
    - name: Check licenses
      run: |
        pip-licenses --format=json --output-file=licenses.json
        pip-licenses --format=table
        echo "📄 License compliance check completed"
    
    - name: Upload license report
      uses: actions/upload-artifact@v3
      with:
        name: license-report
        path: licenses.json
        retention-days: 30

  security-summary:
    runs-on: ubuntu-latest
    needs: [dependency-security, code-security, secrets-detection, license-check]
    if: always()
    name: Security Summary
    
    steps:
    - name: Security scan summary
      run: |
        echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.dependency-security.result }}" == "success" ]]; then
          echo "✅ Dependency Security: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Dependency Security: WARNINGS" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [[ "${{ needs.code-security.result }}" == "success" ]]; then
          echo "✅ Code Security (Bandit): PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Code Security (Bandit): WARNINGS" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [[ "${{ needs.secrets-detection.result }}" == "success" ]]; then
          echo "✅ Secrets Detection: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Secrets Detection: WARNINGS" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [[ "${{ needs.license-check.result }}" == "success" ]]; then
          echo "✅ License Check: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ License Check: WARNINGS" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 Security reports available in artifacts section" >> $GITHUB_STEP_SUMMARY